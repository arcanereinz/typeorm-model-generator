{{#*inline "Import"}}
import {{localImport (toEntityName entityName)}} from './{{toFileName fileName}}'
{{/inline}}

{{#*inline "ColumnNoTypeorm"}}
{{#each constraints}}{{this}}{{/each}}
{{printPropertyVisibility}}{{toPropertyName tscName}} {{#if @root.smartStrictMode}}{{chainingSymbol}}{{else}}{{strictMode}}{{/if}} :{{tscType}}{{#if options.nullable}} | null{{/if}};

{{/inline}}

{{#*inline "RelationNoTypeorm"}}
{{printPropertyVisibility}}{{toPropertyName fieldName}}{{#if @root.smartStrictMode}}?{{else}}{{strictMode}}{{/if}}:{{toRelation (toEntityName relatedTable) relationType}};

{{/inline}}

{{#*inline "Constructor"}}
{{printPropertyVisibility}}constructor(init?: Partial<{{toEntityName entityName}}>) {
    {{#activeRecord}}super();
    {{/activeRecord}}Object.assign(this, init);
}
{{/inline}}

{{#*inline "EntityNoTypeorm"}}
export {{defaultExport}} class {{toEntityName tscName}}{{#activeRecord}} extends BaseEntity{{/activeRecord}} {
{{#columns}}{{> ColumnNoTypeorm}}{{/columns~}}
{{#relations}}{{> RelationNoTypeorm}}{{/relations~}}
{{#if generateConstructor}}{{>Constructor entityName=tscName}}{{/if~}}
}
{{/inline}}

 /**
 * Class representation of `{{schema}}.{{sqlName}}` generated by modified version of typeorm-model-generator.
 * 
 * @description Created with the following options (list not exhaustive - only pertains to entity options):
 * {{#if cascade}} --cascade '{{cascade}}',{{/if~}}
{{#if activeRecord}} --active-record,{{/if~}}
{{#if generateConstructor}} --generateConstructor,{{/if~}}
{{#if generateTinyintTransformer}} --generateTinyintTransformer,{{/if~}}
{{#if generateBigintTransformer}} --generateBigintTransformer,{{/if~}}
{{#if generateValidators}} --generateValidators,{{/if~}}
{{#if smartStrictMode}} --smartStrictMode,{{/if~}}
{{#if noTypeorm}} --noTypeorm,{{/if}}
 */
// TODO: Fix race condition. If comment below is removed then class-validator column decorators will not match import statement.
// import {BaseEntity,Column,Entity,Index,JoinColumn,JoinTable,ManyToMany,ManyToOne,OneToMany,OneToOne,PrimaryColumn,PrimaryGeneratedColumn,RelationId} from "typeorm";
{{#if generateValidators}}import { {{#each classValidators}}{{@key}},{{/each}} } from 'class-validator';{{/if~}}
{{#fileImports}}{{> Import}}{{/fileImports}}

{{> EntityNoTypeorm}}

